#!/usr/bin/env python3

import daemon
import sys
import time

from viber_command_bot.cache import cache, CacheError
from viber_command_bot.config import config
from viber_command_bot.messages import send_message
from viber_command_bot.flask.application import command_thread_target
from viber_command_bot.flask.application import logging, logger


def main():

    if not config.get('Viber', 'redis_channel'):
        print('FATAL: Redis channel is not configured')
        return 1

    try:
        cache.listen()
        logger.info('Receiving viber-bot messages...')
        while True:
            message = cache.get_message()
            if message.get('message_type') == 'execute':
                command_thread_target(message.get('text'),
                                      message.get('output_format'),
                                      message.get('user_id'))
            else:
                log_message(message)
    except CacheError as e:
        logger.error('FATAL: {}'.format(e))
        return 1
    except KeyboardInterrupt:
        logger.info('Exiting...')

    return 0


def get_logger_handles(logger):
    handles = []
    for handler in logger.handlers:
        if type(handler) == logging.handlers.SysLogHandler:
            handles.append(handler.socket.fileno())
    if logger.parent:
        handles += get_logger_handles(logger.parent)
    return handles


def log_message(message):
    if not message:
        return
    logger.info('Message from {name} ({user_id}): {text}'.format(**message))


if __name__ == '__main__':
    if not config.getboolean('Logger', 'syslog', fallback=True):
        # Add syslog handler
        handler = logging.handlers.SysLogHandler(address='/dev/log')
        formatter = logging.Formatter('viber-bot: %(levelname)s: %(message)s')
        handler.setFormatter(formatter)
        logger.addHandler(handler)
    with daemon.DaemonContext(files_preserve=get_logger_handles(logger)):
        sys.exit(main())
